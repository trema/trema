#! /usr/bin/env ruby
#
# Trema command-line tool.
#
# Copyright (C) 2008-2012 NEC Corporation
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License, version 2, as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#


$LOAD_PATH.unshift File.expand_path( File.join File.dirname( __FILE__ ), "..", "ruby" )


require "rubygems"

require "gli"
require "trema/command"
require "trema/util"
require "trema/version"


include GLI::App
include Trema::Util
include Trema::Command


program_desc "Trema command-line tool"
version Trema::VERSION


desc "Be verbose"
switch [ :v, :verbose ]


desc "Runs a trema application"
arg_name "controller"
command :run do | c |
  trema_run c
end


desc "Terminates a trema process"
arg_name "name"
command :kill do | c |
  trema_kill c
end


desc "Starts a killed trema process again"
arg_name "name"
command :up do | c |
  trema_up c
end


desc "Terminates all trema processes"
command :killall do | c |
  trema_killall c
end


desc "Sends UDP packets to destination host"
command :send_packets do | c |
  trema_send_packets c
end


desc "Shows stats of packets"
arg_name "host"
command :show_stats do | c |
  trema_show_stats c
end


desc "Resets stats of packets"
arg_name "hosts..."
command :reset_stats do | c |
  trema_reset_stats c
end


desc "Print all flow entries"
arg_name "switches..."
command :dump_flows do | c |
  trema_dump_flows c
end


desc "Opens in your browser Trema's Ruby API documentation."
command :ruby do | c |
  trema_ruby c
end


desc "Displays the current runtime version"
command :version do | c |
  trema_version c
end


pre do | global, command, options, args |
  $verbose = global[ :verbose ]

  if FileTest.exist?( Trema.tmp ) and not FileTest.writable?( Trema.tmp )
    # Trema is system widely installed with gem command
    sh "sudo chmod o+w -R #{ Trema.tmp }"
  end

  FileUtils.mkdir_p Trema.log
  FileUtils.mkdir_p Trema.pid
  FileUtils.mkdir_p Trema.sock

  true
end


on_error do | exception |
  # Error logic here
  # return false to skip default error handling
  true
end


exit run( ARGV )


### Local variables:
### mode: Ruby
### coding: utf-8
### indent-tabs-mode: nil
### End:
